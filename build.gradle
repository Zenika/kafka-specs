plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group 'kafka'
version '0.1.0'

/* Plugin Java */
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

/* Plugin Application */
application {
    mainClass = "io.streamthoughts.kafka.specs.KafkaSpecsRunner"
    applicationDefaultJvmArgs = ['-Dlogback.configurationFile=file:LOGBACK_APP_HOME/etc/logback.xml']
}

def junitVersion = '5.2.0'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    implementation "org.apache.kafka:kafka-clients:2.5.0"
    implementation "org.yaml:snakeyaml:1.19"
    implementation "net.sf.jopt-simple:jopt-simple:5.0.4"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "com.googlecode.java-diff-utils:diffutils:1.3.0"
    implementation "com.google.code.gson:gson:2.8.5"
}

task copyLicense {
    outputs.file new File("$buildDir/LICENSE")
    outputs.file new File("$buildDir/README.md")
    doLast {
        copy {
            from "LICENSE", "README.md"
            into "$buildDir"
        }
    }
}

task copyConfig(type: Copy) {
    from "src/main/resources/logback.xml"
    into "$buildDir/etc"
}

startScripts {
    unixStartScriptGenerator.template = resources.text.fromFile("scripts/unixScriptTemplate.txt")
    windowsStartScriptGenerator.template = resources.text.fromFile("scripts/windowsScriptTemplate.txt")
    doLast {
        unixScript.text = unixScript.text.replace('LOGBACK_APP_HOME', '\$APP_HOME')
        windowsScript.text = windowsScript.text.replace('LOGBACK_APP_HOME', '%~dp0..')
    }
}

distributions {
    main {
        contents {
            from(copyLicense)
            from(copyConfig) { into "etc" }
        }
    }
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task printVersion {
    doLast {
        println project.version
    }
}

jar {
    manifest {
        attributes(
            "Built-By": System.properties["user.name"],
            "Build-Jdk": "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            "Created-By": "Gradle ${gradle.gradleVersion}",
            "Implementation-Title": "kafka-specs",
            "Implementation-Version": archiveVersion)
    }
}

