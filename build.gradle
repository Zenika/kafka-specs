group 'kafka'
version '0.1.0'

/* Plugin java */
apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

/* Plugin application */
apply plugin: 'application'
apply plugin: 'maven'

mainClassName = "com.zenika.kafka.specs.KafkaSpecsRunner"
applicationDefaultJvmArgs = ['-Dlogback.configurationFile=file:LOGBACK_APP_HOME/etc/logback.xml']

def junitVersion = '5.2.0'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    test.useJUnitPlatform()

    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:4.12.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.1.0'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.4'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'com.googlecode.java-diff-utils', name: 'diffutils', version: '1.3.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

task copyLicense {
    outputs.file new File("$buildDir/LICENSE")
    outputs.file new File("$buildDir/README.md")
    doLast {
        copy {
            from "LICENSE", "README.md"
            into "$buildDir"
        }
    }
}

task copyConfig(type: Copy) {
    from "src/main/resources/logback.xml"
    into "$buildDir/etc"
}

startScripts {
    unixStartScriptGenerator.template = resources.text.fromFile("scripts/unixScriptTemplate.txt")
    windowsStartScriptGenerator.template = resources.text.fromFile("scripts/windowsScriptTemplate.txt")
    doLast {
        unixScript.text = unixScript.text.replace('LOGBACK_APP_HOME', '\$APP_HOME')
        windowsScript.text = windowsScript.text.replace('LOGBACK_APP_HOME', '%~dp0..')
    }
}

distributions {
    main {
        contents {
            from(copyLicense)
            from(copyConfig) { into "etc" }
        }
    }
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    //useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}
